// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Edit button component test should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditButton
    hidden="false"
    slug="article-slug"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`Edit button component test should render without crashing when logged in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditButton
    hidden="true"
    slug="article-slug"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Link
        to="/editor/article-slug"
      >
        <span
          className="btn btn-primary mr-3"
          data-tip="Edit the Article"
          hidden={true}
          onKeyPress={[Function]}
          role="button"
          slug="article-slug"
          tabIndex="0"
        >
          <i
            className="fa fa-pencil"
          />
           
          Edit
        </span>
      </Link>,
      "className": "mr-2",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <span
          className="btn btn-primary mr-3"
          data-tip="Edit the Article"
          hidden={true}
          onKeyPress={[Function]}
          role="button"
          slug="article-slug"
          tabIndex="0"
        >
          <i
            className="fa fa-pencil"
          />
           
          Edit
        </span>,
        "to": "/editor/article-slug",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="fa fa-pencil"
            />,
            " ",
            "Edit",
          ],
          "className": "btn btn-primary mr-3",
          "data-tip": "Edit the Article",
          "hidden": true,
          "onKeyPress": [Function],
          "role": "button",
          "slug": "article-slug",
          "tabIndex": "0",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-pencil",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          " ",
          "Edit",
        ],
        "type": "span",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          to="/editor/article-slug"
        >
          <span
            className="btn btn-primary mr-3"
            data-tip="Edit the Article"
            hidden={true}
            onKeyPress={[Function]}
            role="button"
            slug="article-slug"
            tabIndex="0"
          >
            <i
              className="fa fa-pencil"
            />
             
            Edit
          </span>
        </Link>,
        "className": "mr-2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <span
            className="btn btn-primary mr-3"
            data-tip="Edit the Article"
            hidden={true}
            onKeyPress={[Function]}
            role="button"
            slug="article-slug"
            tabIndex="0"
          >
            <i
              className="fa fa-pencil"
            />
             
            Edit
          </span>,
          "to": "/editor/article-slug",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-pencil"
              />,
              " ",
              "Edit",
            ],
            "className": "btn btn-primary mr-3",
            "data-tip": "Edit the Article",
            "hidden": true,
            "onKeyPress": [Function],
            "role": "button",
            "slug": "article-slug",
            "tabIndex": "0",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-pencil",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " ",
            "Edit",
          ],
          "type": "span",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
