// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Article component test should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleComponent
    article={
      Object {
        "author": Object {
          "image": "http://imageurl.com/avatar.jpg",
          "username": "testuser",
        },
        "image": "http://imageurl.com/article_image.jpg",
        "tagList": Array [],
        "title": "test title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="article-container"
      >
        <div
          className="details"
        >
          <img
            alt="author avatar"
            className="img-responsive avatar"
            src="https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg"
          />
          <h4>
            test title
          </h4>
          <div
            className="user-details"
          >
            <div
              className="float-left"
            >
              <Link
                to="#"
              >
                No Tags
              </Link>
            </div>
            <div
              className="float-right"
            >
              <div
                className="media"
              >
                <div
                  className="media-body"
                >
                  <h5>
                    testuser
                  </h5>
                  <p>
                    Invalid Date
                  </p>
                </div>
              </div>
            </div>
          </div>
          <p>
            undefined
          </p>
          <div
            className="row"
          >
            <div
              className="col-md-6"
            >
              <Connect(EditButton)
                username="testuser"
              />
            </div>
            <div
              className="col-md-6"
            >
              <withRouter(Connect(DeleteButton))
                username="testuser"
              />
            </div>
          </div>
          <div
            className="separator"
          />
        </div>
      </div>,
      "className": "col-lg-8",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="details"
        >
          <img
            alt="author avatar"
            className="img-responsive avatar"
            src="https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg"
          />
          <h4>
            test title
          </h4>
          <div
            className="user-details"
          >
            <div
              className="float-left"
            >
              <Link
                to="#"
              >
                No Tags
              </Link>
            </div>
            <div
              className="float-right"
            >
              <div
                className="media"
              >
                <div
                  className="media-body"
                >
                  <h5>
                    testuser
                  </h5>
                  <p>
                    Invalid Date
                  </p>
                </div>
              </div>
            </div>
          </div>
          <p>
            undefined
          </p>
          <div
            className="row"
          >
            <div
              className="col-md-6"
            >
              <Connect(EditButton)
                username="testuser"
              />
            </div>
            <div
              className="col-md-6"
            >
              <withRouter(Connect(DeleteButton))
                username="testuser"
              />
            </div>
          </div>
          <div
            className="separator"
          />
        </div>,
        "className": "article-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="author avatar"
              className="img-responsive avatar"
              src="https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg"
            />,
            <h4>
              test title
            </h4>,
            <div
              className="user-details"
            >
              <div
                className="float-left"
              >
                <Link
                  to="#"
                >
                  No Tags
                </Link>
              </div>
              <div
                className="float-right"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-body"
                  >
                    <h5>
                      testuser
                    </h5>
                    <p>
                      Invalid Date
                    </p>
                  </div>
                </div>
              </div>
            </div>,
            <p>
              undefined
            </p>,
            <div
              className="row"
            >
              <div
                className="col-md-6"
              >
                <Connect(EditButton)
                  username="testuser"
                />
              </div>
              <div
                className="col-md-6"
              >
                <withRouter(Connect(DeleteButton))
                  username="testuser"
                />
              </div>
            </div>,
            <div
              className="separator"
            />,
          ],
          "className": "details",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "author avatar",
              "className": "img-responsive avatar",
              "src": "https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test title",
            },
            "ref": null,
            "rendered": "test title",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="float-left"
                >
                  <Link
                    to="#"
                  >
                    No Tags
                  </Link>
                </div>,
                <div
                  className="float-right"
                >
                  <div
                    className="media"
                  >
                    <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>
                  </div>
                </div>,
              ],
              "className": "user-details",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    to="#"
                  >
                    No Tags
                  </Link>,
                  "className": "float-left",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "No Tags",
                    "to": "#",
                  },
                  "ref": null,
                  "rendered": "No Tags",
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="media"
                  >
                    <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>
                  </div>,
                  "className": "float-right",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>,
                    "className": "media",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h5>
                          testuser
                        </h5>,
                        <p>
                          Invalid Date
                        </p>,
                      ],
                      "className": "media-body",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "testuser",
                        },
                        "ref": null,
                        "rendered": "testuser",
                        "type": "h5",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Invalid Date",
                        },
                        "ref": null,
                        "rendered": "Invalid Date",
                        "type": "p",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "undefined",
            },
            "ref": null,
            "rendered": "undefined",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-md-6"
                >
                  <Connect(EditButton)
                    username="testuser"
                  />
                </div>,
                <div
                  className="col-md-6"
                >
                  <withRouter(Connect(DeleteButton))
                    username="testuser"
                  />
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(EditButton)
                    username="testuser"
                  />,
                  "className": "col-md-6",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onClick": undefined,
                    "slug": undefined,
                    "username": "testuser",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <withRouter(Connect(DeleteButton))
                    username="testuser"
                  />,
                  "className": "col-md-6",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "onClick": undefined,
                    "slug": undefined,
                    "username": "testuser",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "separator",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="article-container"
        >
          <div
            className="details"
          >
            <img
              alt="author avatar"
              className="img-responsive avatar"
              src="https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg"
            />
            <h4>
              test title
            </h4>
            <div
              className="user-details"
            >
              <div
                className="float-left"
              >
                <Link
                  to="#"
                >
                  No Tags
                </Link>
              </div>
              <div
                className="float-right"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-body"
                  >
                    <h5>
                      testuser
                    </h5>
                    <p>
                      Invalid Date
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <p>
              undefined
            </p>
            <div
              className="row"
            >
              <div
                className="col-md-6"
              >
                <Connect(EditButton)
                  username="testuser"
                />
              </div>
              <div
                className="col-md-6"
              >
                <withRouter(Connect(DeleteButton))
                  username="testuser"
                />
              </div>
            </div>
            <div
              className="separator"
            />
          </div>
        </div>,
        "className": "col-lg-8",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="details"
          >
            <img
              alt="author avatar"
              className="img-responsive avatar"
              src="https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg"
            />
            <h4>
              test title
            </h4>
            <div
              className="user-details"
            >
              <div
                className="float-left"
              >
                <Link
                  to="#"
                >
                  No Tags
                </Link>
              </div>
              <div
                className="float-right"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-body"
                  >
                    <h5>
                      testuser
                    </h5>
                    <p>
                      Invalid Date
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <p>
              undefined
            </p>
            <div
              className="row"
            >
              <div
                className="col-md-6"
              >
                <Connect(EditButton)
                  username="testuser"
                />
              </div>
              <div
                className="col-md-6"
              >
                <withRouter(Connect(DeleteButton))
                  username="testuser"
                />
              </div>
            </div>
            <div
              className="separator"
            />
          </div>,
          "className": "article-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="author avatar"
                className="img-responsive avatar"
                src="https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg"
              />,
              <h4>
                test title
              </h4>,
              <div
                className="user-details"
              >
                <div
                  className="float-left"
                >
                  <Link
                    to="#"
                  >
                    No Tags
                  </Link>
                </div>
                <div
                  className="float-right"
                >
                  <div
                    className="media"
                  >
                    <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>
                  </div>
                </div>
              </div>,
              <p>
                undefined
              </p>,
              <div
                className="row"
              >
                <div
                  className="col-md-6"
                >
                  <Connect(EditButton)
                    username="testuser"
                  />
                </div>
                <div
                  className="col-md-6"
                >
                  <withRouter(Connect(DeleteButton))
                    username="testuser"
                  />
                </div>
              </div>,
              <div
                className="separator"
              />,
            ],
            "className": "details",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "author avatar",
                "className": "img-responsive avatar",
                "src": "https://res.cloudinary.com/wasibani/image/upload/v1555329619/AuthorsHaven/background-image-3.jpg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test title",
              },
              "ref": null,
              "rendered": "test title",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="float-left"
                  >
                    <Link
                      to="#"
                    >
                      No Tags
                    </Link>
                  </div>,
                  <div
                    className="float-right"
                  >
                    <div
                      className="media"
                    >
                      <div
                        className="media-body"
                      >
                        <h5>
                          testuser
                        </h5>
                        <p>
                          Invalid Date
                        </p>
                      </div>
                    </div>
                  </div>,
                ],
                "className": "user-details",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      to="#"
                    >
                      No Tags
                    </Link>,
                    "className": "float-left",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "No Tags",
                      "to": "#",
                    },
                    "ref": null,
                    "rendered": "No Tags",
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="media"
                    >
                      <div
                        className="media-body"
                      >
                        <h5>
                          testuser
                        </h5>
                        <p>
                          Invalid Date
                        </p>
                      </div>
                    </div>,
                    "className": "float-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="media-body"
                      >
                        <h5>
                          testuser
                        </h5>
                        <p>
                          Invalid Date
                        </p>
                      </div>,
                      "className": "media",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <h5>
                            testuser
                          </h5>,
                          <p>
                            Invalid Date
                          </p>,
                        ],
                        "className": "media-body",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "testuser",
                          },
                          "ref": null,
                          "rendered": "testuser",
                          "type": "h5",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Invalid Date",
                          },
                          "ref": null,
                          "rendered": "Invalid Date",
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "undefined",
              },
              "ref": null,
              "rendered": "undefined",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-md-6"
                  >
                    <Connect(EditButton)
                      username="testuser"
                    />
                  </div>,
                  <div
                    className="col-md-6"
                  >
                    <withRouter(Connect(DeleteButton))
                      username="testuser"
                    />
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(EditButton)
                      username="testuser"
                    />,
                    "className": "col-md-6",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onClick": undefined,
                      "slug": undefined,
                      "username": "testuser",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <withRouter(Connect(DeleteButton))
                      username="testuser"
                    />,
                    "className": "col-md-6",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "onClick": undefined,
                      "slug": undefined,
                      "username": "testuser",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "separator",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`Article component test should render without crashing 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleComponent
    article={
      Object {
        "author": Object {
          "image": "http://imageurl.com/avatar.jpg",
          "username": "testuser",
        },
        "image": null,
        "tagList": Array [],
        "title": "test title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="article-container"
      >
        <div
          className="details"
        >
          <img
            alt="author avatar"
            className="img-responsive avatar"
            src={null}
          />
          <h4>
            test title
          </h4>
          <div
            className="user-details"
          >
            <div
              className="float-left"
            >
              <Link
                to="#"
              >
                No Tags
              </Link>
            </div>
            <div
              className="float-right"
            >
              <div
                className="media"
              >
                <div
                  className="media-body"
                >
                  <h5>
                    testuser
                  </h5>
                  <p>
                    Invalid Date
                  </p>
                </div>
              </div>
            </div>
          </div>
          <p>
            undefined
          </p>
          <div
            className="row"
          >
            <div
              className="col-md-6"
            >
              <Connect(EditButton)
                username="testuser"
              />
            </div>
            <div
              className="col-md-6"
            >
              <withRouter(Connect(DeleteButton))
                username="testuser"
              />
            </div>
          </div>
          <div
            className="separator"
          />
        </div>
      </div>,
      "className": "col-lg-8",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="details"
        >
          <img
            alt="author avatar"
            className="img-responsive avatar"
            src={null}
          />
          <h4>
            test title
          </h4>
          <div
            className="user-details"
          >
            <div
              className="float-left"
            >
              <Link
                to="#"
              >
                No Tags
              </Link>
            </div>
            <div
              className="float-right"
            >
              <div
                className="media"
              >
                <div
                  className="media-body"
                >
                  <h5>
                    testuser
                  </h5>
                  <p>
                    Invalid Date
                  </p>
                </div>
              </div>
            </div>
          </div>
          <p>
            undefined
          </p>
          <div
            className="row"
          >
            <div
              className="col-md-6"
            >
              <Connect(EditButton)
                username="testuser"
              />
            </div>
            <div
              className="col-md-6"
            >
              <withRouter(Connect(DeleteButton))
                username="testuser"
              />
            </div>
          </div>
          <div
            className="separator"
          />
        </div>,
        "className": "article-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="author avatar"
              className="img-responsive avatar"
              src={null}
            />,
            <h4>
              test title
            </h4>,
            <div
              className="user-details"
            >
              <div
                className="float-left"
              >
                <Link
                  to="#"
                >
                  No Tags
                </Link>
              </div>
              <div
                className="float-right"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-body"
                  >
                    <h5>
                      testuser
                    </h5>
                    <p>
                      Invalid Date
                    </p>
                  </div>
                </div>
              </div>
            </div>,
            <p>
              undefined
            </p>,
            <div
              className="row"
            >
              <div
                className="col-md-6"
              >
                <Connect(EditButton)
                  username="testuser"
                />
              </div>
              <div
                className="col-md-6"
              >
                <withRouter(Connect(DeleteButton))
                  username="testuser"
                />
              </div>
            </div>,
            <div
              className="separator"
            />,
          ],
          "className": "details",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "author avatar",
              "className": "img-responsive avatar",
              "src": null,
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test title",
            },
            "ref": null,
            "rendered": "test title",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="float-left"
                >
                  <Link
                    to="#"
                  >
                    No Tags
                  </Link>
                </div>,
                <div
                  className="float-right"
                >
                  <div
                    className="media"
                  >
                    <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>
                  </div>
                </div>,
              ],
              "className": "user-details",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    to="#"
                  >
                    No Tags
                  </Link>,
                  "className": "float-left",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "No Tags",
                    "to": "#",
                  },
                  "ref": null,
                  "rendered": "No Tags",
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="media"
                  >
                    <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>
                  </div>,
                  "className": "float-right",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>,
                    "className": "media",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h5>
                          testuser
                        </h5>,
                        <p>
                          Invalid Date
                        </p>,
                      ],
                      "className": "media-body",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "testuser",
                        },
                        "ref": null,
                        "rendered": "testuser",
                        "type": "h5",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Invalid Date",
                        },
                        "ref": null,
                        "rendered": "Invalid Date",
                        "type": "p",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "undefined",
            },
            "ref": null,
            "rendered": "undefined",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-md-6"
                >
                  <Connect(EditButton)
                    username="testuser"
                  />
                </div>,
                <div
                  className="col-md-6"
                >
                  <withRouter(Connect(DeleteButton))
                    username="testuser"
                  />
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(EditButton)
                    username="testuser"
                  />,
                  "className": "col-md-6",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onClick": undefined,
                    "slug": undefined,
                    "username": "testuser",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <withRouter(Connect(DeleteButton))
                    username="testuser"
                  />,
                  "className": "col-md-6",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "onClick": undefined,
                    "slug": undefined,
                    "username": "testuser",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "separator",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="article-container"
        >
          <div
            className="details"
          >
            <img
              alt="author avatar"
              className="img-responsive avatar"
              src={null}
            />
            <h4>
              test title
            </h4>
            <div
              className="user-details"
            >
              <div
                className="float-left"
              >
                <Link
                  to="#"
                >
                  No Tags
                </Link>
              </div>
              <div
                className="float-right"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-body"
                  >
                    <h5>
                      testuser
                    </h5>
                    <p>
                      Invalid Date
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <p>
              undefined
            </p>
            <div
              className="row"
            >
              <div
                className="col-md-6"
              >
                <Connect(EditButton)
                  username="testuser"
                />
              </div>
              <div
                className="col-md-6"
              >
                <withRouter(Connect(DeleteButton))
                  username="testuser"
                />
              </div>
            </div>
            <div
              className="separator"
            />
          </div>
        </div>,
        "className": "col-lg-8",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="details"
          >
            <img
              alt="author avatar"
              className="img-responsive avatar"
              src={null}
            />
            <h4>
              test title
            </h4>
            <div
              className="user-details"
            >
              <div
                className="float-left"
              >
                <Link
                  to="#"
                >
                  No Tags
                </Link>
              </div>
              <div
                className="float-right"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-body"
                  >
                    <h5>
                      testuser
                    </h5>
                    <p>
                      Invalid Date
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <p>
              undefined
            </p>
            <div
              className="row"
            >
              <div
                className="col-md-6"
              >
                <Connect(EditButton)
                  username="testuser"
                />
              </div>
              <div
                className="col-md-6"
              >
                <withRouter(Connect(DeleteButton))
                  username="testuser"
                />
              </div>
            </div>
            <div
              className="separator"
            />
          </div>,
          "className": "article-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="author avatar"
                className="img-responsive avatar"
                src={null}
              />,
              <h4>
                test title
              </h4>,
              <div
                className="user-details"
              >
                <div
                  className="float-left"
                >
                  <Link
                    to="#"
                  >
                    No Tags
                  </Link>
                </div>
                <div
                  className="float-right"
                >
                  <div
                    className="media"
                  >
                    <div
                      className="media-body"
                    >
                      <h5>
                        testuser
                      </h5>
                      <p>
                        Invalid Date
                      </p>
                    </div>
                  </div>
                </div>
              </div>,
              <p>
                undefined
              </p>,
              <div
                className="row"
              >
                <div
                  className="col-md-6"
                >
                  <Connect(EditButton)
                    username="testuser"
                  />
                </div>
                <div
                  className="col-md-6"
                >
                  <withRouter(Connect(DeleteButton))
                    username="testuser"
                  />
                </div>
              </div>,
              <div
                className="separator"
              />,
            ],
            "className": "details",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "author avatar",
                "className": "img-responsive avatar",
                "src": null,
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test title",
              },
              "ref": null,
              "rendered": "test title",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="float-left"
                  >
                    <Link
                      to="#"
                    >
                      No Tags
                    </Link>
                  </div>,
                  <div
                    className="float-right"
                  >
                    <div
                      className="media"
                    >
                      <div
                        className="media-body"
                      >
                        <h5>
                          testuser
                        </h5>
                        <p>
                          Invalid Date
                        </p>
                      </div>
                    </div>
                  </div>,
                ],
                "className": "user-details",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      to="#"
                    >
                      No Tags
                    </Link>,
                    "className": "float-left",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "No Tags",
                      "to": "#",
                    },
                    "ref": null,
                    "rendered": "No Tags",
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="media"
                    >
                      <div
                        className="media-body"
                      >
                        <h5>
                          testuser
                        </h5>
                        <p>
                          Invalid Date
                        </p>
                      </div>
                    </div>,
                    "className": "float-right",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="media-body"
                      >
                        <h5>
                          testuser
                        </h5>
                        <p>
                          Invalid Date
                        </p>
                      </div>,
                      "className": "media",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <h5>
                            testuser
                          </h5>,
                          <p>
                            Invalid Date
                          </p>,
                        ],
                        "className": "media-body",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "testuser",
                          },
                          "ref": null,
                          "rendered": "testuser",
                          "type": "h5",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Invalid Date",
                          },
                          "ref": null,
                          "rendered": "Invalid Date",
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "undefined",
              },
              "ref": null,
              "rendered": "undefined",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-md-6"
                  >
                    <Connect(EditButton)
                      username="testuser"
                    />
                  </div>,
                  <div
                    className="col-md-6"
                  >
                    <withRouter(Connect(DeleteButton))
                      username="testuser"
                    />
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(EditButton)
                      username="testuser"
                    />,
                    "className": "col-md-6",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onClick": undefined,
                      "slug": undefined,
                      "username": "testuser",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <withRouter(Connect(DeleteButton))
                      username="testuser"
                    />,
                    "className": "col-md-6",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "onClick": undefined,
                      "slug": undefined,
                      "username": "testuser",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "separator",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
