// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignupView should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <div
    className="login background-image"
  >
    <CircularProgressLoader
      loading={false}
    />
    <Signup
      disabled={false}
      errors={Object {}}
      isProcessing={false}
      onChange={[Function]}
      onSubmit={[Function]}
      validateInput={
        Object {
          "matchPassword": false,
          "password": false,
          "username": false,
        }
      }
    />
  </div>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <CircularProgressLoader
          loading={false}
        />,
        <Signup
          disabled={false}
          errors={Object {}}
          isProcessing={false}
          onChange={[Function]}
          onSubmit={[Function]}
          validateInput={
            Object {
              "matchPassword": false,
              "password": false,
              "username": false,
            }
          }
        />,
      ],
      "className": "login background-image",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "loading": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "disabled": false,
          "errors": Object {},
          "history": undefined,
          "isProcessing": false,
          "onChange": [Function],
          "onClick": undefined,
          "onSubmit": [Function],
          "validateInput": Object {
            "matchPassword": false,
            "password": false,
            "username": false,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <CircularProgressLoader
            loading={false}
          />,
          <Signup
            disabled={false}
            errors={Object {}}
            isProcessing={false}
            onChange={[Function]}
            onSubmit={[Function]}
            validateInput={
              Object {
                "matchPassword": false,
                "password": false,
                "username": false,
              }
            }
          />,
        ],
        "className": "login background-image",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "loading": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "disabled": false,
            "errors": Object {},
            "history": undefined,
            "isProcessing": false,
            "onChange": [Function],
            "onClick": undefined,
            "onSubmit": [Function],
            "validateInput": Object {
              "matchPassword": false,
              "password": false,
              "username": false,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
